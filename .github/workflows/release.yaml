name: Release on Master Merge
on:
  push:
    branches:
      - master
permissions:
  contents: write
jobs:
  release:
    name: Build and Release GCanvas
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm ci
      - name: Build library
        run: npm run build
      - name: Read version from package.json
        id: pkg
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=v$VERSION" >> $GITHUB_OUTPUT
      - name: Show version used
        run: |
          echo "Publishing version: ${{ steps.pkg.outputs.VERSION }}"
      - name: Generate Changelog
        id: changelog
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0)
          echo "Last tag was: $LAST_TAG"
          LOG=$(git log $LAST_TAG..HEAD --pretty=format:"- %s")
          echo "LOG<<EOF" >> $GITHUB_OUTPUT
          echo "$LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.pkg.outputs.VERSION }}
          body: ${{ steps.changelog.outputs.LOG }}
          release_name: GCanvas ${{ steps.pkg.outputs.VERSION }}
          draft: false
          prerelease: false
      - name: Upload UMD build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/gcanvas.umd.min.js
          asset_name: gcanvas.umd.min.js
          asset_content_type: application/javascript
      - name: Upload ESM build
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/gcanvas.es.min.js
          asset_name: gcanvas.es.min.js
          asset_content_type: application/javascript
